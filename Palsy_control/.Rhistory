usethis::use_description()
rm(list=ls()) # remove all objects
# Functions ---------------------------------------------------------------
devtools::load_all()
# set folders structure for analisis --------------------------------------
create_dir_structure()
# usethis::use_description()
folder_dir<-  file.path("original_data")
filetask<-list.files(folder_dir,pattern= 'task')
filetask
rm(list=ls()) # remove all objects
# Load custom functions using devtools package
devtools::load_all()
# Files are .csv placed in the "original_data" folder
folder_dir<-  file.path("original_data")
filetask<-list.files(folder_dir,pattern= 'task') # from gorilla
fileq<-list.files(folder_dir,pattern= 'questionnaire') # from gorilla
# Concatenate all files from Psychopy
dataset <- read.csv(file.path(folder_dir,filetask), sep=",", header=TRUE,stringsAsFactors = FALSE)
# Create the "task" sub_dataset
dataset<-dataset%>%
filter(Response == "click"| Zone.Type ==  "timelimit_screen")%>%
dplyr::select( "Local.Date", "Participant.Public.ID" ,"Trial.Number",
"Screen.Name", "Reaction.Time", "X.Coordinate", "Y.Coordinate", "display",
"Videos", "intensity", "file_gender", "duration","emotion", "identity")
View(dataset)
temp <- read.csv(file.path(folder_dir,filetask), sep=",", header=TRUE,stringsAsFactors = FALSE)
# Create the "task" sub_dataset
dataset<-temp%>%
filter(Response == "click"| Zone.Type ==  "timelimit_screen")%>%
dplyr::select( "Local.Date", "Participant.Public.ID" ,"Trial.Number",
"Screen.Name", "Reaction.Time", "X.Coordinate", "Y.Coordinate", "display",
"Videos", "intensity", "file_gender", "duration","emotion", "identity")%>%
'colnames<-'(c("ID.subject", "Exp.date", "Exp.trial", "Pt.code", "Pt.gender", "Pt.study", "Pt.age", "Pt.group",
"Wheel.name", "Resp.rt", "Wheel.x", "Wheel.y", "Wheel.task",
"Video.name", "Video.intensity", "Video.gender", "Video.emotion", "Video.id"))
dataset<-temp%>%
filter(Response == "click"| Zone.Type ==  "timelimit_screen")%>%
dplyr::select( "Local.Date", "Participant.Public.ID" ,"Trial.Number",
"Screen.Name", "Reaction.Time", "X.Coordinate", "Y.Coordinate", "display",
"Videos", "intensity", "file_gender", "duration","emotion", "identity")%>%
'colnames<-'(c("Exp.date", "Exp.trial", "Pt.code", "Pt.gender", "Pt.study", "Pt.age", "Pt.group",
"Wheel.name", "Resp.rt", "Wheel.x", "Wheel.y", "Wheel.task",
"Video.name", "Video.intensity", "Video.gender", "Video.emotion", "Video.id"))
rm(list=ls()) # remove all objects
# Load custom functions using devtools package
devtools::load_all()
# Files are .csv placed in the "original_data" folder
folder_dir<-  file.path("original_data")
filetask<-list.files(folder_dir,pattern= 'task') # from gorilla
fileq<-list.files(folder_dir,pattern= 'questionnaire') # from gorilla
# Concatenate all files from Psychopy
temp <- read.csv(file.path(folder_dir,filetask), sep=",", header=TRUE,stringsAsFactors = FALSE)
# Create the "task" sub_dataset
dataset<-temp%>%
filter(Response == "click"| Zone.Type ==  "timelimit_screen")%>%
dplyr::select( "Local.Date", "Participant.Public.ID" ,"Trial.Number",
"Screen.Name", "Reaction.Time", "X.Coordinate", "Y.Coordinate", "display",
"Videos", "intensity", "file_gender", "duration","emotion", "identity")%>%
'colnames<-'(c("Exp.date", "Exp.trial", "Pt.code", "Pt.gender", "Pt.study", "Pt.age", "Pt.group",
"Wheel.name", "Resp.rt", "Wheel.x", "Wheel.y", "Wheel.task",
"Video.name", "Video.intensity", "Video.gender", "Video.emotion", "Video.id"))
temp%>%
filter(Response == "click"| Zone.Type ==  "timelimit_screen")%>%
dplyr::select( "Local.Date", "Participant.Public.ID" ,"Trial.Number",
"Screen.Name", "Reaction.Time", "X.Coordinate", "Y.Coordinate", "display",
"Videos", "intensity", "file_gender", "duration","emotion", "identity")
View(temp)
rm(list=ls()) # remove all objects
# Load custom functions using devtools package
devtools::load_all()
# Files are .csv placed in the "original_data" folder
folder_dir<-  file.path("original_data")
filetask<-list.files(folder_dir,pattern= 'task') # from gorilla
fileq<-list.files(folder_dir,pattern= 'questionnaire') # from gorilla
# Concatenate all files from Psychopy
temp <- read.csv(file.path(folder_dir,filetask), sep=",", header=TRUE,stringsAsFactors = FALSE)
# Create the "task" sub_dataset
dataset<-temp%>%
filter(Response == "click"| Zone.Type ==  "timelimit_screen")%>%
dplyr::select( "Local.Date", "Trial.Number","Participant.Public.ID" ,
"Screen.Name", "Reaction.Time", "X.Coordinate", "Y.Coordinate", "display",
"Videos", "intensity", "file_gender", "emotion", "identity")%>%
'colnames<-'(c("Exp.date", "Exp.trial", "Pt.code",
"Wheel.name", "Resp.rt", "Wheel.x", "Wheel.y", "Wheel.task",
"Video.name", "Video.intensity", "Video.gender", "Video.emotion", "Video.id"))
View(dataset)
View(dataset)
temp <- read.csv(file.path(folder_dir,filetask), sep=",", header=TRUE,stringsAsFactors = FALSE)
names(temp)
demographic <- read.csv(file.path(folder_dir,filedemo), sep=";", header=TRUE,stringsAsFactors = FALSE,na.strings= "aa")%>%
()
# Load the Demographic Dataset from the Google Sheet
demographic <- read.csv(file.path(folder_dir,filedemo), sep=";", header=TRUE,stringsAsFactors = FALSE,na.strings= "aa")
filedemo<-list.files(folder_dir,pattern= 'Pazienti')
# Load the Demographic Dataset from the Google Sheet
demographic <- read.csv(file.path(folder_dir,filedemo), sep=";", header=TRUE,stringsAsFactors = FALSE,na.strings= "aa")
View(demographic)
