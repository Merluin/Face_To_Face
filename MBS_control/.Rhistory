filter(Wheel.task == "task", Pt.code != "10_moebius" ,Video.emotion == "neutrality")%>%
dplyr::select(Wheel.name,Pt.code,Pt.group,Video.emotion,Video.set,Wheel.angle,Resp.angle,Resp.diff,Resp.intensity)%>%
group_by(Wheel.name,Video.emotion,Wheel.angle,Pt.group,Video.set)%>%
summarise(Resp.angle.mean = "not applicable",
Wheel.angle.mean = "not applicable",
Resp.angle.sd = NA,
Resp.intensity.mean = mean(Resp.intensity, na.rm=TRUE),
Resp.intensity.sd = sd(Resp.intensity, na.rm=TRUE),
Resp.diff.mean = "not applicable",
Resp.diff.sd = NA)%>%
ungroup()%>%
dplyr::select(Wheel.name,Video.emotion,Wheel.angle.mean,
Pt.group,Video.set,
Resp.angle.mean,Resp.angle.sd,
Resp.diff.mean,Resp.diff.sd,
Resp.intensity.mean,Resp.intensity.sd)%>%
mutate(Resp.intensity.mean = round(Resp.intensity.mean,2),
Resp.intensity.sd = round(Resp.intensity.sd,2))%>%
'colnames<-'(c("GEW","Emotion","Angle reference",
"Group" ,"Set",
"Response angle", "Response variance",
"Bias","Uncertainty",
"Mean (px)", "Sd"))
# dataset nemotions for flextable object
dat_gw1 <- dataset_full%>%
filter(Wheel.task == "task",Wheel.name == "GW1", Pt.code != "10_moebius" ,Video.emotion != "neutrality")%>%
drop_na(Resp.angle)%>%
dplyr::select(Wheel.name,Pt.code,Pt.group,Video.emotion,Video.set,Wheel.angle,Resp.angle,Resp.diff,Resp.intensity)%>%
group_by(Wheel.name,Video.emotion,Wheel.angle,Pt.group,Video.set)%>%
summarise(Resp.angle.mean = rad_to_deg(CircStats::circ.mean(Resp.angle)) %% 360,
Wheel.angle = rad_to_deg(CircStats::circ.mean(Wheel.angle)) %% 360,
Resp.angle.sd = 1 - CircStats::circ.disp(Resp.angle)$var,
Resp.intensity.mean = mean(Resp.intensity, na.rm=TRUE),
Resp.intensity.sd = sd(Resp.intensity, na.rm=TRUE),
Resp.diff.mean = rad_to_deg(CircStats::circ.mean(Resp.diff)) %% 360,
Resp.diff.sd = 1 - CircStats::circ.disp(Resp.diff)$var)%>%
ungroup()%>%
dplyr::select(Wheel.name,Video.emotion,Wheel.angle,
Pt.group,Video.set,
Resp.angle.mean,Resp.angle.sd,
Resp.diff.mean,Resp.diff.sd,
Resp.intensity.mean,Resp.intensity.sd)%>%
mutate(Wheel.angle = paste0(as.character(round(Wheel.angle,2)),"°"),
Resp.angle.mean = paste0(as.character(round(Resp.angle.mean,2)),"°"),
Resp.angle.sd = paste0(as.character(round(Resp.angle.sd,2)),"°"),
Resp.diff.mean = paste0(as.character(round(Resp.diff.mean,2)),"°"),
Resp.diff.sd = paste0(as.character(round(Resp.diff.sd,2)),"°"),
Resp.intensity.mean = round(Resp.intensity.mean,2),
Resp.intensity.sd = round(Resp.intensity.sd,2))%>%
'colnames<-'(c("GEW","Emotion","Angle reference",
"Group" ,"Set",
"Response angle", "Response variance",
"Bias","Uncertainty",
"Mean (px)", "Sd"))
# dataset nemotions for flextable object
dat_gw2 <- dataset_full%>%
filter(Wheel.task == "task",Wheel.name == "GW2", Pt.code != "10_moebius" ,Video.emotion != "neutrality")%>%
drop_na(Resp.angle)%>%
dplyr::select(Wheel.name,Pt.code,Pt.group,Video.emotion,Video.set,Wheel.angle,Resp.angle,Resp.diff,Resp.intensity)%>%
group_by(Wheel.name,Video.emotion,Wheel.angle,Pt.group,Video.set)%>%
summarise(Resp.angle.mean = "not applicable",
Wheel.angle.mean = "not applicable",
Resp.angle.sd = NA,
Resp.intensity.mean = mean(Resp.intensity, na.rm=TRUE),
Resp.intensity.sd = sd(Resp.intensity, na.rm=TRUE),
Resp.diff.mean = "not applicable",
Resp.diff.sd = NA)%>%
ungroup()%>%
dplyr::select(Wheel.name,Video.emotion,Wheel.angle.mean,
Pt.group,Video.set,
Resp.angle.mean,Resp.angle.sd,
Resp.diff.mean,Resp.diff.sd,
Resp.intensity.mean,Resp.intensity.sd)%>%
mutate(Resp.intensity.mean = round(Resp.intensity.mean,2),
Resp.intensity.sd = round(Resp.intensity.sd,2))%>%
'colnames<-'(c("GEW","Emotion","Angle reference",
"Group" ,"Set",
"Response angle", "Response variance",
"Bias","Uncertainty",
"Mean (px)", "Sd"))
REsponses_table <- rbind(dat_neutral,dat_gw1,dat_gw2)%>%
arrange(GEW,Emotion,group,Set)%>%
flextable() %>%
autofit() %>%
theme_vanilla() %>%
fontsize(part = "all", size = 9)%>%
merge_v(j = c(1:5))%>%
add_header_row(colwidths = c(5, 4, 2),
values = c("Genova Emotion Wheel","Responses", "Perceived Intensity") )
REsponses_table <- rbind(dat_neutral,dat_gw1,dat_gw2)%>%
arrange(GEW,Emotion,group,Set)%>%
flextable() %>%
autofit() %>%
theme_vanilla() %>%
fontsize(part = "all", size = 9)%>%
merge_v(j = c(1:7))
REsponses_table <- rbind(dat_neutral,dat_gw1,dat_gw2)%>%
arrange(GEW,Emotion,group,Set)
REsponses_table <- rbind(dat_neutral,dat_gw1,dat_gw2)%>%
arrange(GEW,Emotion,Group,Set)%>%
flextable() %>%
autofit() %>%
theme_vanilla() %>%
fontsize(part = "all", size = 9)%>%
merge_v(j = c(1:7))%>%
add_header_row(colwidths = c(5, 4,2),
values = c("Genova Emotion Wheel","Responses", "Perceived Intensity") )
REsponses_table
###########################################################################
#
#  Experiment:  CARIPARO
#  Programmer:  QUETTIER THOMAS
#  Date:        04/06/2023
#     This script explore data
#
#  Experiment CPO_moebius_AMIM1
#
#  Update:      04/06/2023
###########################################################################
rm(list=ls()) # remove all objects
# Functions & libraries---------------------------------------------------------------
devtools::load_all()
# Data --------------------------------------------------------------------
load(file.path("objects","mbs_circular.RData"))
table(dataset_gw1$Pt.code, dataset_gw1$Video.emotion)
# no incomplete pt.code data.
# Demographic Table ---------------------------------------------------------------
# dataset for flextable object
demogaphic<- dataset_gw1%>%
filter(Pt.code != "10_moebius")%>%
group_by(Pt.code)%>%
filter(row_number()==1)%>%
ungroup()%>%
dplyr::select(Pt.group,Pt.id, Pt.gender, Pt.age, Pt.study,Plsy.locus,Surg.type,Surg.date,Asmt.sunnybrook,
Asmt.fdi.fisica,Asmt.fdi.sociale,Asmt.tas.20,Asmt.aq,Asmt.omft,Asmt.lpost.tot)%>%
'colnames<-'(c("Group","Subject","Gender","Age" ,"Education","Paralisi","Type","Date","Sunnybrook","FDI fisica",
"FDI sociale", "TAS 20", "AQ", "OFMT", "L POST"))
# flextable object
demogaphic_tbl_full <- demogaphic%>%
flextable() %>%
autofit() %>%
theme_vanilla() %>%
fontsize(part = "all", size = 9)%>%
merge_v(j = 1)%>%
align( part = "header", align = "left") %>%
align( part = "body", align = "center") %>%
add_header_row(colwidths = c(6, 2, 7),
values = c("Participant", "Surgery","Assesment") )
# Participants Table summary ---------------------------------------------------------------
# dataset for flextable object
demogaphic_summary <- demogaphic%>%
dplyr::select(Group,Subject,Gender,Age,Education)%>%
group_by(Group,Gender) %>%
summarise(n = n(),
Age_mean = mean(Age),
Age_Sd = sd(Age),
Education_mean = mean(Education),
Education_Sd = sd(Education))
# add total
demogaphic_tbl_summary <- rbind(demogaphic_summary[1:2,],
data.frame(Group = "control", Gender ='Sub-total',t(colSums(demogaphic_summary[1:2,3])), t(colMeans(demogaphic_summary[1:2, -c(1,2,3)]))),
demogaphic_summary[3:4,],
data.frame(Group = "moebius", Gender ='Sub-total',t(colSums(demogaphic_summary[3:4,3])), t(colMeans(demogaphic_summary[3:4, -c(1,2,3)]))),
data.frame(Group = NA, Gender ='Total',t(colSums(demogaphic_summary[,3])), t(colMeans(demogaphic_summary[, -c(1,2,3)]))))%>%
'colnames<-'(c("Group","Gender","n","Mean", "Sd","Mean ","Sd " ))%>%
flextable() %>%
autofit() %>%
theme_vanilla() %>%
fontsize(part = "all", size = 9)%>%
merge_v(j = 1)%>%
align( part = "header", align = "left") %>%
align( part = "body", align = "center")%>%
colformat_double(j = 4:7, digits = 2) %>%
align(part = "header", align = "center") %>%
align( part = "body", align = "center")%>%
add_header_row(colwidths = c(3, 2, 2),
values = c("", "Age","Education") )%>%
bold(i = c(3,6,7), bold = TRUE)
# Participants Responses Table---------------------------------------------------------------
# dataset neutral for flextable object
dat_neutral <- dataset_full%>%
filter(Wheel.task == "task", Pt.code != "10_moebius" ,Video.emotion == "neutrality")%>%
dplyr::select(Wheel.name,Pt.code,Pt.group,Video.emotion,Video.set,Wheel.angle,Resp.angle,Resp.diff,Resp.intensity)%>%
group_by(Wheel.name,Video.emotion,Wheel.angle,Pt.group,Video.set)%>%
summarise(Resp.angle.mean = NA,
Wheel.angle.mean = NA,
Resp.angle.sd = NA,
Resp.intensity.mean = mean(Resp.intensity, na.rm=TRUE),
Resp.intensity.sd = sd(Resp.intensity, na.rm=TRUE),
Resp.diff.mean = NA,
Resp.diff.sd = NA)%>%
ungroup()%>%
dplyr::select(Wheel.name,Video.emotion,Wheel.angle.mean,
Pt.group,Video.set,
Resp.angle.mean,Resp.angle.sd,
Resp.diff.mean,Resp.diff.sd,
Resp.intensity.mean,Resp.intensity.sd)%>%
mutate(Resp.intensity.mean = round(Resp.intensity.mean,2),
Resp.intensity.sd = round(Resp.intensity.sd,2))%>%
'colnames<-'(c("GEW","Emotion","Angle reference",
"Group" ,"Set",
"Response angle", "Response variance",
"Bias","Uncertainty",
"Mean (px)", "Sd"))
# dataset nemotions for flextable object
dat_gw1 <- dataset_full%>%
filter(Wheel.task == "task",Wheel.name == "GW1", Pt.code != "10_moebius" ,Video.emotion != "neutrality")%>%
drop_na(Resp.angle)%>%
dplyr::select(Wheel.name,Pt.code,Pt.group,Video.emotion,Video.set,Wheel.angle,Resp.angle,Resp.diff,Resp.intensity)%>%
group_by(Wheel.name,Video.emotion,Wheel.angle,Pt.group,Video.set)%>%
summarise(Resp.angle.mean = rad_to_deg(CircStats::circ.mean(Resp.angle)) %% 360,
Wheel.angle = rad_to_deg(CircStats::circ.mean(Wheel.angle)) %% 360,
Resp.angle.sd = 1 - CircStats::circ.disp(Resp.angle)$var,
Resp.intensity.mean = mean(Resp.intensity, na.rm=TRUE),
Resp.intensity.sd = sd(Resp.intensity, na.rm=TRUE),
Resp.diff.mean = rad_to_deg(CircStats::circ.mean(Resp.diff)) %% 360,
Resp.diff.sd = 1 - CircStats::circ.disp(Resp.diff)$var)%>%
ungroup()%>%
dplyr::select(Wheel.name,Video.emotion,Wheel.angle,
Pt.group,Video.set,
Resp.angle.mean,Resp.angle.sd,
Resp.diff.mean,Resp.diff.sd,
Resp.intensity.mean,Resp.intensity.sd)%>%
mutate(Wheel.angle = paste0(as.character(round(Wheel.angle,2)),"°"),
Resp.angle.mean = paste0(as.character(round(Resp.angle.mean,2)),"°"),
Resp.angle.sd = paste0(as.character(round(Resp.angle.sd,2)),"°"),
Resp.diff.mean = paste0(as.character(round(Resp.diff.mean,2)),"°"),
Resp.diff.sd = paste0(as.character(round(Resp.diff.sd,2)),"°"),
Resp.intensity.mean = round(Resp.intensity.mean,2),
Resp.intensity.sd = round(Resp.intensity.sd,2))%>%
'colnames<-'(c("GEW","Emotion","Angle reference",
"Group" ,"Set",
"Response angle", "Response variance",
"Bias","Uncertainty",
"Mean (px)", "Sd"))
# dataset nemotions for flextable object
dat_gw2 <- dataset_full%>%
filter(Wheel.task == "task",Wheel.name == "GW2", Pt.code != "10_moebius" ,Video.emotion != "neutrality")%>%
drop_na(Resp.angle)%>%
dplyr::select(Wheel.name,Pt.code,Pt.group,Video.emotion,Video.set,Wheel.angle,Resp.angle,Resp.diff,Resp.intensity)%>%
group_by(Wheel.name,Video.emotion,Wheel.angle,Pt.group,Video.set)%>%
summarise(Resp.angle.mean = NA,
Wheel.angle.mean = NA,
Resp.angle.sd = NA,
Resp.intensity.mean = mean(Resp.intensity, na.rm=TRUE),
Resp.intensity.sd = sd(Resp.intensity, na.rm=TRUE),
Resp.diff.mean = NA,
Resp.diff.sd = NA)%>%
ungroup()%>%
dplyr::select(Wheel.name,Video.emotion,Wheel.angle.mean,
Pt.group,Video.set,
Resp.angle.mean,Resp.angle.sd,
Resp.diff.mean,Resp.diff.sd,
Resp.intensity.mean,Resp.intensity.sd)%>%
mutate(Resp.intensity.mean = round(Resp.intensity.mean,2),
Resp.intensity.sd = round(Resp.intensity.sd,2))%>%
'colnames<-'(c("GEW","Emotion","Angle reference",
"Group" ,"Set",
"Response angle", "Response variance",
"Bias","Uncertainty",
"Mean (px)", "Sd"))
REsponses_table <- rbind(dat_neutral,dat_gw1,dat_gw2)%>%
arrange(GEW,Emotion,Group,Set)%>%
flextable() %>%
autofit() %>%
theme_vanilla() %>%
fontsize(part = "all", size = 9)%>%
merge_v(j = c(1:5))%>%
add_header_row(colwidths = c(5, 4,2),
values = c("Genova Emotion Wheel","Responses", "Perceived Intensity") )%>%
align(align = "center", part = "all")
Responses_table <- rbind(dat_neutral,dat_gw1,dat_gw2)%>%
arrange(GEW,Emotion,Group,Set)%>%
flextable() %>%
autofit() %>%
theme_vanilla() %>%
fontsize(part = "all", size = 9)%>%
merge_v(j = c(1:5))%>%
add_header_row(colwidths = c(5, 4,2),
values = c("Genova Emotion Wheel","Responses", "Perceived Intensity") )%>%
align(align = "center", part = "all")
Responses_table
###########################################################################
#
#  Experiment:  CARIPARO
#  Programmer:  QUETTIER THOMAS
#  Date:        04/06/2023
#     This script explore data
#
#  Experiment CPO_moebius_AMIM1
#
#  Update:      04/06/2023
###########################################################################
rm(list=ls()) # remove all objects
# Functions & libraries---------------------------------------------------------------
devtools::load_all()
# Data --------------------------------------------------------------------
load(file.path("objects","mbs_circular.RData"))
table(dataset_gw1$Pt.code, dataset_gw1$Video.emotion)
# no incomplete pt.code data.
# Demographic Table ---------------------------------------------------------------
# dataset for flextable object
demogaphic<- dataset_gw1%>%
filter(Pt.code != "10_moebius")%>%
group_by(Pt.code)%>%
filter(row_number()==1)%>%
ungroup()%>%
dplyr::select(Pt.group,Pt.id, Pt.gender, Pt.age, Pt.study,Plsy.locus,Surg.type,Surg.date,Asmt.sunnybrook,
Asmt.fdi.fisica,Asmt.fdi.sociale,Asmt.tas.20,Asmt.aq,Asmt.omft,Asmt.lpost.tot)%>%
'colnames<-'(c("Group","Subject","Gender","Age" ,"Education","Paralisi","Type","Date","Sunnybrook","FDI fisica",
"FDI sociale", "TAS 20", "AQ", "OFMT", "L POST"))
# flextable object
demogaphic_tbl_full <- demogaphic%>%
flextable() %>%
autofit() %>%
theme_vanilla() %>%
fontsize(part = "all", size = 9)%>%
merge_v(j = 1)%>%
align( part = "header", align = "left") %>%
align( part = "body", align = "center") %>%
add_header_row(colwidths = c(6, 2, 7),
values = c("Participant", "Surgery","Assesment") )
# Participants Table summary ---------------------------------------------------------------
# dataset for flextable object
demogaphic_summary <- demogaphic%>%
dplyr::select(Group,Subject,Gender,Age,Education)%>%
group_by(Group,Gender) %>%
summarise(n = n(),
Age_mean = mean(Age),
Age_Sd = sd(Age),
Education_mean = mean(Education),
Education_Sd = sd(Education))
# add total
demogaphic_tbl_summary <- rbind(demogaphic_summary[1:2,],
data.frame(Group = "control", Gender ='Sub-total',t(colSums(demogaphic_summary[1:2,3])), t(colMeans(demogaphic_summary[1:2, -c(1,2,3)]))),
demogaphic_summary[3:4,],
data.frame(Group = "moebius", Gender ='Sub-total',t(colSums(demogaphic_summary[3:4,3])), t(colMeans(demogaphic_summary[3:4, -c(1,2,3)]))),
data.frame(Group = NA, Gender ='Total',t(colSums(demogaphic_summary[,3])), t(colMeans(demogaphic_summary[, -c(1,2,3)]))))%>%
'colnames<-'(c("Group","Gender","n","Mean", "Sd","Mean ","Sd " ))%>%
flextable() %>%
autofit() %>%
theme_vanilla() %>%
fontsize(part = "all", size = 9)%>%
merge_v(j = 1)%>%
align( part = "header", align = "left") %>%
align( part = "body", align = "center")%>%
colformat_double(j = 4:7, digits = 2) %>%
align(part = "header", align = "center") %>%
align( part = "body", align = "center")%>%
add_header_row(colwidths = c(3, 2, 2),
values = c("", "Age","Education") )%>%
bold(i = c(3,6,7), bold = TRUE)
# Participants Responses Table---------------------------------------------------------------
# dataset neutral for flextable object
dat_neutral <- dataset_full%>%
filter(Wheel.task == "task", Pt.code != "10_moebius" ,Video.emotion == "neutrality")%>%
dplyr::select(Wheel.name,Pt.code,Pt.group,Video.emotion,Video.set,Wheel.angle,Resp.angle,Resp.diff,Resp.intensity)%>%
group_by(Wheel.name,Video.emotion,Wheel.angle,Pt.group,Video.set)%>%
summarise(Resp.angle.mean = NA,
Wheel.angle.mean = NA,
Resp.angle.sd = NA,
Resp.intensity.mean = mean(Resp.intensity, na.rm=TRUE),
Resp.intensity.sd = sd(Resp.intensity, na.rm=TRUE),
Resp.diff.mean = NA,
Resp.diff.sd = NA)%>%
ungroup()%>%
dplyr::select(Wheel.name,Video.emotion,Wheel.angle.mean,
Pt.group,Video.set,
Resp.angle.mean,Resp.angle.sd,
Resp.diff.mean,Resp.diff.sd,
Resp.intensity.mean,Resp.intensity.sd)%>%
mutate(Resp.intensity.mean = round(Resp.intensity.mean,2),
Resp.intensity.sd = round(Resp.intensity.sd,2))%>%
'colnames<-'(c("GEW","Emotion","Angle reference",
"Group" ,"Set",
"Response angle", "Response variance",
"Bias","Uncertainty",
"Mean (px)", "Sd"))
# dataset nemotions for flextable object
dat_gw1 <- dataset_full%>%
filter(Wheel.task == "task",Wheel.name == "GW1", Pt.code != "10_moebius" ,Video.emotion != "neutrality")%>%
drop_na(Resp.angle)%>%
dplyr::select(Wheel.name,Pt.code,Pt.group,Video.emotion,Video.set,Wheel.angle,Resp.angle,Resp.diff,Resp.intensity)%>%
group_by(Wheel.name,Video.emotion,Wheel.angle,Pt.group,Video.set)%>%
summarise(Resp.angle.mean = rad_to_deg(CircStats::circ.mean(Resp.angle)) %% 360,
Wheel.angle = rad_to_deg(CircStats::circ.mean(Wheel.angle)) %% 360,
Resp.angle.sd = 1 - CircStats::circ.disp(Resp.angle)$var,
Resp.intensity.mean = mean(Resp.intensity, na.rm=TRUE),
Resp.intensity.sd = sd(Resp.intensity, na.rm=TRUE),
Resp.diff.mean = rad_to_deg(CircStats::circ.mean(Resp.diff)) %% 360,
Resp.diff.sd = 1 - CircStats::circ.disp(Resp.diff)$var)%>%
ungroup()%>%
dplyr::select(Wheel.name,Video.emotion,Wheel.angle,
Pt.group,Video.set,
Resp.angle.mean,Resp.angle.sd,
Resp.diff.mean,Resp.diff.sd,
Resp.intensity.mean,Resp.intensity.sd)%>%
mutate(Wheel.angle = paste0(as.character(round(Wheel.angle,2)),"°"),
Resp.angle.mean = paste0(as.character(round(Resp.angle.mean,2)),"°"),
Resp.angle.sd = paste0(as.character(round(Resp.angle.sd,2)),"°"),
Resp.diff.mean = paste0(as.character(round(Resp.diff.mean,2)),"°"),
Resp.diff.sd = paste0(as.character(round(Resp.diff.sd,2)),"°"),
Resp.intensity.mean = round(Resp.intensity.mean,2),
Resp.intensity.sd = round(Resp.intensity.sd,2))%>%
'colnames<-'(c("GEW","Emotion","Angle reference",
"Group" ,"Set",
"Response angle", "Response variance",
"Bias","Uncertainty",
"Mean (px)", "Sd"))
# dataset nemotions for flextable object
dat_gw2 <- dataset_full%>%
filter(Wheel.task == "task",Wheel.name == "GW2", Pt.code != "10_moebius" ,Video.emotion != "neutrality")%>%
drop_na(Resp.angle)%>%
dplyr::select(Wheel.name,Pt.code,Pt.group,Video.emotion,Video.set,Wheel.angle,Resp.angle,Resp.diff,Resp.intensity)%>%
group_by(Wheel.name,Video.emotion,Wheel.angle,Pt.group,Video.set)%>%
summarise(Resp.angle.mean = rad_to_deg(CircStats::circ.mean(Resp.angle)) %% 360,
Wheel.angle = "0°",
Resp.angle.sd = 1 - CircStats::circ.disp(Resp.angle)$var,
Resp.intensity.mean = mean(Resp.intensity, na.rm=TRUE),
Resp.intensity.sd = sd(Resp.intensity, na.rm=TRUE),
Resp.diff.mean = NA,
Resp.diff.sd = NA)%>%
ungroup()%>%
dplyr::select(Wheel.name,Video.emotion,Wheel.angle.mean,
Pt.group,Video.set,
Resp.angle.mean,Resp.angle.sd,
Resp.diff.mean,Resp.diff.sd,
Resp.intensity.mean,Resp.intensity.sd)%>%
mutate(Resp.intensity.mean = round(Resp.intensity.mean,2),
Resp.intensity.sd = round(Resp.intensity.sd,2))%>%
'colnames<-'(c("GEW","Emotion","Angle reference",
"Group" ,"Set",
"Response angle", "Response variance",
"Bias","Uncertainty",
"Mean (px)", "Sd"))
# dataset nemotions for flextable object
dat_gw2 <- dataset_full%>%
filter(Wheel.task == "task",Wheel.name == "GW2", Pt.code != "10_moebius" ,Video.emotion != "neutrality")%>%
drop_na(Resp.angle)%>%
dplyr::select(Wheel.name,Pt.code,Pt.group,Video.emotion,Video.set,Wheel.angle,Resp.angle,Resp.diff,Resp.intensity)%>%
group_by(Wheel.name,Video.emotion,Wheel.angle,Pt.group,Video.set)%>%
summarise(Resp.angle.mean = rad_to_deg(CircStats::circ.mean(Resp.angle)) %% 360,
Wheel.angle.mean = "0°",
Resp.angle.sd = 1 - CircStats::circ.disp(Resp.angle)$var,
Resp.intensity.mean = mean(Resp.intensity, na.rm=TRUE),
Resp.intensity.sd = sd(Resp.intensity, na.rm=TRUE),
Resp.diff.mean = NA,
Resp.diff.sd = NA)%>%
ungroup()%>%
dplyr::select(Wheel.name,Video.emotion,Wheel.angle.mean,
Pt.group,Video.set,
Resp.angle.mean,Resp.angle.sd,
Resp.diff.mean,Resp.diff.sd,
Resp.intensity.mean,Resp.intensity.sd)%>%
mutate(Resp.intensity.mean = round(Resp.intensity.mean,2),
Resp.intensity.sd = round(Resp.intensity.sd,2))%>%
'colnames<-'(c("GEW","Emotion","Angle reference",
"Group" ,"Set",
"Response angle", "Response variance",
"Bias","Uncertainty",
"Mean (px)", "Sd"))
Responses_table <- rbind(dat_neutral,dat_gw1,dat_gw2)%>%
arrange(GEW,Emotion,Group,Set)%>%
flextable() %>%
autofit() %>%
theme_vanilla() %>%
fontsize(part = "all", size = 9)%>%
merge_v(j = c(1:5))%>%
add_header_row(colwidths = c(5, 4,2),
values = c("Genova Emotion Wheel","Responses", "Perceived Intensity") )%>%
align(align = "center", part = "all")
dat_gw2
Responses_table
# dataset nemotions for flextable object
dat_gw2 <- dataset_full%>%
filter(Wheel.task == "task",Wheel.name == "GW2", Pt.code != "10_moebius" ,Video.emotion != "neutrality")%>%
drop_na(Resp.angle)%>%
dplyr::select(Wheel.name,Pt.code,Pt.group,Video.emotion,Video.set,Wheel.angle,Resp.angle,Resp.diff,Resp.intensity)%>%
group_by(Wheel.name,Video.emotion,Wheel.angle,Pt.group,Video.set)%>%
summarise(Resp.angle.mean = rad_to_deg(CircStats::circ.mean(Resp.angle)) %% 360,
Wheel.angle.mean = "0°",
Resp.angle.sd = 1 - CircStats::circ.disp(Resp.angle)$var,
Resp.intensity.mean = mean(Resp.intensity, na.rm=TRUE),
Resp.intensity.sd = sd(Resp.intensity, na.rm=TRUE),
Resp.diff.mean = NA,
Resp.diff.sd = NA)%>%
ungroup()%>%
dplyr::select(Wheel.name,Video.emotion,Wheel.angle.mean,
Pt.group,Video.set,
Resp.angle.mean,Resp.angle.sd,
Resp.diff.mean,Resp.diff.sd,
Resp.intensity.mean,Resp.intensity.sd)%>%
mutate(Resp.angle.mean = paste0(as.character(round(Resp.angle.mean,2)),"°"),
Resp.angle.sd = paste0(as.character(round(Resp.angle.sd,2)),"°"),
Resp.intensity.mean = round(Resp.intensity.mean,2),
Resp.intensity.sd = round(Resp.intensity.sd,2))%>%
'colnames<-'(c("GEW","Emotion","Angle reference",
"Group" ,"Set",
"Response angle", "Response variance",
"Bias","Uncertainty",
"Mean (px)", "Sd"))
Responses_table <- rbind(dat_neutral,dat_gw1,dat_gw2)%>%
arrange(GEW,Emotion,Group,Set)%>%
flextable() %>%
autofit() %>%
theme_vanilla() %>%
fontsize(part = "all", size = 9)%>%
merge_v(j = c(1:5))%>%
add_header_row(colwidths = c(5, 4,2),
values = c("Genova Emotion Wheel","Responses", "Perceived Intensity") )%>%
align(align = "center", part = "all")
Responses_table
