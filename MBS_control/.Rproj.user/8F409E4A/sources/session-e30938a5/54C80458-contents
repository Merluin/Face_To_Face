###########################################################################
#
#  Experiment:  CARIPARO
#  Programmer:  QUETTIER THOMAS 
#  Date:        0382022
#     This script performs data analysis for the CARIPARO experiment, 
#     specifically for the uncertainty and bais measures of the MBScontrol experiment. 
#     It computes datasets, generates plots, tables, and fits a 
#     mixed-effects model to analyze the uncertaunty and bais.
#
#  Experiment   MBScontrol
#
#  Update:      23/05/2023
###########################################################################

rm(list=ls()) # remove all objects

# Functions & libraries---------------------------------------------------------------

devtools::load_all()

# Data --------------------------------------------------------------------
load(file.path("objects","mbs_circular.RData"))

# GEW is composed by 16 emotions' category. Each emotion/category fill 22,5° of the GEW (360°/16 = 22,5°)
# With respect to its angle's reference,  each emotion category extends from 11,25° to - 11,25°. Correct responses are categorised if the Resp.angle fall in the correct label interval: 
# Example: Video.emotion == fear (video seen), Wheel.angle == 236.25° (angle reference), Resp.angle = 240°, the Pt response fall in the 22,5° interval.


# "uncertainty and bais" will analyse what alternative/error is made (that is to say if some emotion increase the uncertainty) and if so, if such error is systematic (bais)
# We will:
# 1) analyse the circular variance of errors (centred over mode and over chance), 
# 2) second we wil simulate the circular variance for an optimised 22,5° response
# 3) compare error variance to optimised variance
# 4) 

# Calcolo delle frequenze
category_frequencies <- table(data_subset$category)

# Normalizzazione delle frequenze
normalized_frequencies <- category_frequencies / sum(category_frequencies)

# Creazione della tabella delle categorie
category_table <- table(data_subset$emotion, data_subset$category)

# Creazione di una matrice di dissimilarità utilizzando la distanza di Jaccard con normalizzazione delle frequenze
diss_matrix <- 1 - proxy::simil(as.matrix(category_table), method = "Jaccard", frequency = normalized_frequencies)

# Creazione del dendrogramma
cluster_result <- hclust(as.dist(diss_matrix), method = "complete")
cluster_result <- agnes(diss_matrix, method = "complete")

# Visualizzazione del dendrogramma
plot(cluster_result, main = "Dendrogramma per le risposte ai video di happiness")


# Calcolo dei cluster
clusters <- cutree(cluster_result, k = 3)

# Calcolo delle frequenze delle categorie nel dataset
category_table <- table(data_subset$category)

# Creazione dei vettori per replicare le informazioni dei cluster
video_rep <- rep(data_subset$video_set, times = category_table)
category_rep <- rep(names(category_table), times = category_table)
cluster_rep <- clusters

# Creazione del dataframe dei dati dei cluster
cluster_data <- data.frame(video = video_rep, category = category_rep, cluster = cluster_rep)

# Plot delle categorie e dei cluster
plot(category ~ video, data = cluster_data, col = cluster, pch = 16,
     main = "Plot delle categorie e dei cluster", xlab = "Video", ylab = "Categoria")









#################################################
# 
# END
#
############################# uncertainty bais